import ROOT
from fullLims_1cat import getAsymLimits,makeAFillGraph,makeAGraph
from massplot import end,make2DGraph,avtotwidth,parser
import math,sys,time,os,glob,tdrstyle
from array import array
tdrstyle.setTDRStyle()
ROOT.gStyle.SetPadRightMargin(0.18);
ROOT.gStyle.SetPadLeftMargin(0.18);
ROOT.gStyle.SetPadTopMargin(0.10);
Number=6
Red=  [0.000, 0.000 , 0.000, 1.000, 1.000, 1.000]
Green=[0.749, 1.000 , 1.000, 1.000, 0.502, 0.000]
Blue= [1.000, 0.749 , 0.000, 0.000, 0.000, 1.000]
Length=[]
for i in range(Number-1):
  Length.append(1/float(Number-1)*i)
Length.append(1.000)
r=array('d',Red)
g=array('d',Green)
b=array('d',Blue)
l=array('d',Length)

ROOT.TColor.CreateGradientColorTable(Number,l,r,g,b,100)
#ROOT.gStyle.SetPalette(57)

def merge(iPGraph,color,iX=-1,iXMax=100000):
    x = array('d', [])
    y = array('d', [])
    #x.append(500)
    #y.append(iCGraph.GetY()[0#])
    #for i0 in range(0,iCGraph.GetN()):
    #    if iCGraph.GetX()[i0] > iX and iX > 0:
    #        break
    #    x.append(iCGraph.GetX()[i0])
    #    y.append(iCGraph.GetY()[i0])

    for i0 in range(0,iPGraph.GetN()):
        if iPGraph.GetX()[i0] > iXMax:
            break
        if iX < 0:
            x.append(iPGraph.GetX()[i0])
            y.append(iPGraph.GetY()[i0])
        elif iPGraph.GetX()[i0] > iX:
            x.append(iPGraph.GetX()[i0])
            y.append(iPGraph.GetY()[i0])
    lGraph    = makeAGraph( x, y, color, 3 )
    lGraph.SetMarkerColor(color)
    return lGraph


def dijetexp(color,i90CL=False):
    if i90CL:
        lPFile = ROOT.TFile("PF90CL.root")
        lPGraph = lPFile.Get("exp")
        lCFile = ROOT.TFile("Calo90CL.root")
        lCGraph = lCFile.Get("exp")
        lGraph = merge(lPGraph,lCGraph,color,1400,3900)
        return lGraph
    lPFile1=ROOT.TFile('limits_freq_qq_pfdijet2017_95CL_Dataset.root')
    lPGraph = lPFile1.Get("exp1sigma_qq_pfdijet2017")

    lGraph = merge(lPGraph,color,1400,5500)
    return lGraph
    x = array('d', [])
    y = array('d', [])
    #x.append(500)
    #y.append(8.619535664753032)
    x.append(601.9305019305019)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(601.9305019305019))
    x.append(650.1930501930501)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(650.1930501930501))
    x.append(698.4555984555984)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(698.4555984555984))
    x.append(746.7181467181467)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(746.7181467181467))
    x.append(812.3552123552123)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(812.3552123552123))
    x.append(879.9227799227799)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(879.9227799227799))
    x.append(953.2818532818533)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(953.2818532818533))
    x.append(1032.4324324324325)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(1032.4324324324325))
    x.append(1117.3745173745174)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(1117.3745173745174))
    x.append(1204.2471042471043)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(1204.2471042471043))
    x.append(1291.1196911196912)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(1291.1196911196912))
    x.append(1377.992277992278)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(1377.992277992278))
    x.append(1447.4903474903476)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(1447.4903474903476))
    x.append(1526.6409266409269)
    y.append(calo.Get('exp_qq_calodijet2016').Eval(1526.6409266409269))
    x.append(1835.5653097740994)
    y.append(pf.Get('exp_qq_pfdijet2016').Eval(1835.5653097740994))
    x.append(2093.5706031462005)
    y.append(pf.Get('exp_qq_pfdijet2016').Eval(2093.5706031462005))
    x.append(2341.333967046895)
    y.append(pf.Get('exp_qq_pfdijet2016').Eval(2341.333967046895))
    x.append(2578.7249310370526)
    y.append(pf.Get('exp_qq_pfdijet2016').Eval(2578.7249310370526))
    x.append(2754.175054052038)
    y.append(pf.Get('exp_qq_pfdijet2016').Eval(2754.175054052038))
    x.append(3043.297547155743)
    y.append(pf.Get('exp_qq_pfdijet2016').Eval(3043.297547155743))
    x.append(3435.7200104376343)
    y.append(pf.Get('exp_qq_pfdijet2016').Eval(3435.7200104376343))
    x.append(3797.188362036829)
    y.append(pf.Get('exp_qq_pfdijet2016').Eval(3797.188362036829))
    #x.append(4138.0097666443)
    #y.append(0.010394256012614915)
    #x.append(4437.53727726832)
    #y.append(0.007783059964888597)
    #x.append(4809.37802877805)
    #y.append(0.005500486503683233)
    #x.append(5201.8657272795035)
    #y.append(0.0037763370738787476)
    #x.append(5656.294266756131)
    #y.append(0.002376824781618676)
    #x.append(6162.454335346305)
    #y.append(0.0015404057465133833)
    #x.append(6658.307239245508)
    #y.append(0.0010277152713018512)
    #x.append(7081.879519868783)
    #y.append(0.0007478854520557367)
    #x.append(7515.922053231939)
    #y.append(0.0006113493020261009)
    #x.append(7826.148139864309)
    #y.append(0.0006301833652603328)
    #x.append(7971.035562513977)
    #y.append(0.0007082739961764732)
    lGraph    = makeAGraph( x, y, color, 3 )
    lGraph.SetMarkerColor(color)
    return lGraph

def dijetobs(color,i90CL=False):
    if i90CL:
        lPFile  = ROOT.TFile("PF90CL.root")
        lPGraph = lPFile.Get("obs")
        lCFile  = ROOT.TFile("Calo90CL.root")
        lCGraph = lCFile.Get("obs")
        lGraph  = merge(lCGraph,color,1400,5000)
        return lGraph
#    lPFile = ROOT.TFile("limits_freq_qq_calodijet2016_pfdijet2016.root")
#    lPFile1 = ROOT.TFile("limits_freq_qq_calodijet2016.root")
    lPFile2 = ROOT.TFile("limits_freq_qq_pfdijet2017_95CL_Dataset.root")
#    lCGraph = lPFile1.Get("obs_qq_calodijet2016")
    lCGraph = lPFile2.Get("obs_qq_pfdijet2017")
    lGraph = merge(lCGraph,color,1400,5500)
    return lGraph
    x = array('d', [])
    y = array('d', [])
    #x.append(500)
    #y.append(4.417344703140073)
    x.append(598.0694980694981)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(598.0694980694981))
    x.append(630.8880308880309)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(630.8880308880309))
    x.append(654.0540540540541)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(654.0540540540541))
    x.append(694.5945945945946)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(694.5945945945946))
    x.append(729.3436293436293)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(729.3436293436293))
    x.append(764.0926640926641)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(764.0926640926641))
    x.append(802.7027027027027)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(802.7027027027027))
    x.append(850.965250965251)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(850.965250965251))
    x.append(901.1583011583012)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(901.1583011583012))
    x.append(949.4208494208494)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(949.4208494208494))
    x.append(1001.5444015444016)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1001.5444015444016))
    x.append(1053.6679536679537)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1053.6679536679537))
    x.append(1103.861003861004)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1103.861003861004))
    x.append(1152.1235521235521)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1152.1235521235521))
    x.append(1202.3166023166023)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1202.3166023166023))
    x.append(1250.5791505791508)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1250.5791505791508))
    x.append(1300.772200772201)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1300.772200772201))
    x.append(1347.1042471042472)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1347.1042471042472))
    x.append(1406.949806949807)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1406.949806949807))
    x.append(1451.3513513513512)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1451.3513513513512))
    x.append(1497.6833976833977)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1497.6833976833977))
    x.append(1545.9459459459463)
    y.append(lPFile1.Get('obs_qq_calodijet2016').Eval(1545.9459459459463))
    x.append(1601.930501930502)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(1601.930501930502))
    x.append(1773.4939983598003)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(1773.4939983598003))
    x.append(1856.1470215462607)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(1856.1470215462607))
    x.append(1949.1398270334746)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(1949.1398270334746))
    x.append(2104.399649593677)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2104.399649593677))
    x.append(2228.313949153806)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2228.313949153806))
    x.append(2279.686684559755)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2279.686684559755))
    x.append(2341.268731827331)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2341.268731827331))
    x.append(2402.91601431447)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2402.91601431447))
    x.append(2506.118131663312)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2506.118131663312))
    x.append(2537.13747856557)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2537.13747856557))
    x.append(2640.6657720122266)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2640.6657720122266))
    x.append(2764.9388652799516)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2764.9388652799516))
    x.append(2878.676470588234)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2878.676470588234))
    x.append(2971.6040408558847)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(2971.6040408558847))
    x.append(3074.8061582047267)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(3074.8061582047267))
    x.append(3167.440169984343)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(3167.440169984343))
    x.append(3229.2179229106086)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(3229.2179229106086))
    x.append(3311.773093267725)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(3311.773093267725))
    x.append(3425.412845746663)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(3425.412845746663))
    x.append(3507.9027808842166)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(3507.9027808842166))
    x.append(3631.8170804443444)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(3631.8170804443444))
    x.append(3797.188362036829)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(3797.188362036829))
    x.append(3880.004473272198)
    y.append(lPFile2.Get('obs_qq_pfdijet2016').Eval(3880.004473272198)) 
   #x.append(4014.291172742861)
    #y.append(0.014301172804579109)
    #x.append(4096.781107880414)
    #y.append(0.011673263156169997)
    #x.append(4199.754901960783)
    #y.append(0.008004607532669124)
    #x.append(4292.519384179526)
    #y.append(0.006165135029541548)
    #x.append(4395.656266308803)
    #y.append(0.004888573359511099)
    #x.append(4509.328636397525)
    #y.append(0.004614774148116912)
    #x.append(4674.797770819354)
    #y.append(0.004754085899371195)
    #x.append(4778.293446656227)
    #y.append(0.005189296395244354)
    #x.append(4902.240363826138)
    #y.append(0.004622306281508651)
    #x.append(5036.527063296801)
    #y.append(0.004117443041530253)
    #x.append(5139.663945426078)
    #y.append(0.003264879400966817)
    #x.append(5273.91802728696)
    #y.append(0.0028249949084984487)
    #x.append(5418.740214717065)
    #y.append(0.002995817276430047)
    #x.append(5563.56240214717)
    #y.append(0.0031769689661235974)
    #x.append(5739.240848430627)
    #y.append(0.0029139008040259193)
    #x.append(5945.840788786996)
    #y.append(0.002449838209903935)
    #x.append(6121.388764631328)
    #y.append(0.0020004411218901654)
    #x.append(6266.015246402742)
    #y.append(0.0017820229509131172)
    #x.append(6266.015246402742)
    #y.append(0.0017820229509131172)
    #x.append(6431.256057556102)
    #y.append(0.0014979640103628745)
    #x.append(6431.256057556102)
    #y.append(0.0014979640103628745)
    #x.append(6596.464251099679)
    #y.append(0.0012231257522893248)
    #x.append(6782.286774025198)
    #y.append(0.0009424133022435063)
    #x.append(6906.201073585326)
    #y.append(0.0008154048580218117)
    #x.append(7092.219302169536)
    #y.append(0.000747917549775239)
    #x.append(7236.943636770297)
    #y.append(0.0007269362219934222)
    #x.append(7236.943636770297)
    #y.append(0.0007269362219934222)
    #x.append(7402.380153582345)
    #y.append(0.0007274355606432079)
    #x.append(7516.117758890628)
    #y.append(0.0007277790549174683)
    #x.append(7702.266457913961)
    #y.append(0.000749813755546937)
    #x.append(7867.800827555356)
    #y.append(0.0008186658745549854)
    #x.append(8002.446320733617)
    #y.append(0.0010038700029024285)
    lGraph    = makeAGraph( x, y, color, 3 )
    lGraph.SetMarkerColor(color)
    return lGraph

def dijetxs(color):
    x = array('d', [])
    y = array('d', [])
    av = True 
    if av:
#      x.append(500)
#      y.append(53.088896)
#      x.append(1000)
#      y.append(4.36988822)
#      x.append(1500)
#      y.append(0.79225344)
#      x.append(1800)
#      y.append(0.328192761)
#      x.append(1850)
#      y.append(0.291486468)
#      x.append(1900)
#      y.append(0.255722285)
#      x.append(1950)
#      y.append(0.221615421)
#      x.append(2000)
#      y.append(0.197382687)
#      x.append(2050)
#      y.append(0.172207705)
#      x.append(2100)
#      y.append(0.151872695)
#      x.append(2150)
#      y.append(0.132865362)
#      x.append(2200)
#      y.append(0.119653168)
#      x.append(2250)
#      y.append(0.10592325)
#      x.append(2300)
#      y.append(0.093760045)
#      x.append(2350)
#      y.append(0.082462696)
#      x.append(2400)
#      y.append(0.072743034)
#      x.append(2450)
#      y.append(0.066333462)
#      x.append(2500)
#      y.append(0.058459076)
#      x.append(2550)
#      y.append(0.052267432)
#      x.append(2600)
#      y.append(0.0466491248)
#      x.append(2650)
#      y.append(0.0412177488)
#      x.append(2700)
#      y.append(0.0376700324)
#      x.append(2750)
#      y.append(0.0337084692)
#      x.append(2800)
#      y.append(0.0300574278)
#      x.append(3000)
#      y.append(0.0197948408)
#      x.append(3500)
#      y.append(0.0072222648)
#      x.append(4000)
#      y.append(0.00293975808)
#      x.append(4500)
#      y.append(0.00125176576)
#      x.append(5000)
#      y.append(0.00058481674)
#      x.append(5500)
#      y.append(0.000306748216)
#      x.append(6000)
#      y.append(0.00017600644)
#      x.append(6500)
#      y.append(0.0001053256)
#      x.append(7000)
#      y.append(6.6086196e-05)
#

         x.append(500)
         y.append(59.614102)
         x.append(1000)
         y.append(4.39442892)
         x.append(1500)
         y.append(0.7484672)
         x.append(2000)
         y.append(0.180830628)
         x.append(2500)
         y.append(0.050762504)
         x.append(3000)
         y.append(0.015260852)
         x.append(3500)
         y.append(0.004857242)
         x.append(4000)
         y.append(0.001624735)
         x.append(4500)
         y.append(0.000555587)
         x.append(5000)
         y.append(0.000178534)
         x.append(5500)
         y.append(6.28742E-05)
         x.append(6000)
         y.append(1.84131E-05)
    else:

      x.append(500)
      y.append(56.722146)
      x.append(1000)
      y.append(4.53346776)
      x.append(1500)
      y.append(0.80386579)
      x.append(1800)
      y.append(0.332044176)
      x.append(1850)
      y.append(0.295785828)
      x.append(1900)
      y.append(0.253906524)
      x.append(1950)
      y.append(0.228449253)
      x.append(2000)
      y.append(0.196083384)
      x.append(2050)
      y.append(0.17507732)
      x.append(2100)
      y.append(0.1541716)
      x.append(2150)
      y.append(0.136159308)
      x.append(2200)
      y.append(0.119948593)
      x.append(2250)
      y.append(0.105895725)
      x.append(2300)
      y.append(0.093335968)
      x.append(2350)
      y.append(0.08224269)
      x.append(2400)
      y.append(0.074087409)
      x.append(2450)
      y.append(0.067147744)
      x.append(2500)
      y.append(0.058765036)
      x.append(2550)
      y.append(0.053258316)
      x.append(2600)
      y.append(0.047031966)
      x.append(2650)
      y.append(0.0416929593)
      x.append(2700)
      y.append(0.0381415031)
      x.append(2750)
      y.append(0.0339399845)
      x.append(2800)
      y.append(0.0308598977)
      x.append(3000)
      y.append(0.0199016835)
      x.append(3500)
      y.append(0.0074277676)
      x.append(4000)
      y.append(0.00291764418)
      x.append(4500)
      y.append(0.00127515024)
      x.append(5000)
      y.append(0.0005965878)
      x.append(5500)
      y.append(0.000311786336)
      x.append(6000)
      y.append(0.000174678885)
      x.append(6500)
      y.append(0.000105331028)
      x.append(7000)
      y.append(6.7976986e-05)
    lGraph    = makeAGraph( x, y, color, 3 )
    lGraph.SetMarkerColor(color)
    return lGraph

def divide(iG,iXS,iGB=False,iGDM=1,iGQ=0.25,iMDM=1.):
    for i0 in range(0,iG.GetN()):
        iG.GetY()[i0] = iG.GetY()[i0]/iXS.Eval(iG.GetX()[i0])/(5./6.)
        lDMWidth = avtotwidth(2,iGDM,iGQ,iG.GetX()[i0],iMDM)
        lWidth   = avtotwidth(2,0.  ,iGQ,iG.GetX()[i0],iMDM)
        iG.GetY()[i0] = (lWidth/lDMWidth)*iG.GetY()[i0]
        if iGB:
            iG.GetY()[i0]=(math.sqrt(iG.GetY()[i0]))*0.25*6
            
def main(iAxial,i90CL,iExp,iGB):
    leg = ROOT.TLegend(0.207,0.782,0.427,0.935)
    leg.SetHeader("")
    leg.SetFillColor(0)    
    leg.SetBorderSize(0)  
    leg.SetTextFont(42)
    leg.SetFillStyle(0)  
    canv0 = ROOT.TCanvas("can0","can0",1200,800)
    exp=dijetexp(ROOT.kGreen,i90CL)
    obs=dijetobs(ROOT.kRed  ,i90CL)
    xs=dijetxs(ROOT.kBlack)
    divide(exp,xs,True)
    divide(obs,xs,True)
    exp.GetXaxis().SetTitle("m_{med}")
    exp.GetYaxis().SetTitle("g_{B}")
    #exp.GetYaxis().SetTitle("#sigma_{J}(m_{med})")
    #exp.GetYaxis().SetTitle("#mu=#sigma_{J}/#sigma_{0}")
    if iGB:
        exp.Draw("alp")
        obs.Draw("lp")
        lFile = ROOT.TFile("Output.root","RECREATE")
        exp.SetName("exp")
        obs.SetName("obs")
        exp.Write()
        obs.Write()
        lFile.Close()
        #xs .Draw("lp")                                                                                                                                      #leg.AddEntry(exp,"expected","lp")
        leg.AddEntry(obs,"observed","lp")
        leg.AddEntry(exp,"expected","lp")
        leg.Draw()
        canv0.Update()
        #leg.AddEntry(xs ,"DM Model","lp")
        end()
        exit()
    gdm=1
    canv1 = ROOT.TCanvas("can1","can1",1200,800)
#    canv1.cd(1)
#    frame = canv1.cd(1).DrawFrame(600,0,3700,1700)
    lCL="90" if i90CL else "95"
    print 'exp\n\n\n\n\n\n'
    lExp,lXExp=make2DGraph(exp,gdm,canv1,leg,"Expected",1,iAxial)
    print 'obs\n\n\n\n\n\n'
    lObs,lXObs=make2DGraph(obs,gdm,canv1,leg,"Observed",ROOT.kBlack,iAxial)
    if iExp:
	    lExp.GetYaxis().SetRangeUser(0,2300)
	    lExp.GetXaxis().SetRangeUser(600,4000)
	    lExp.GetYaxis().SetTitle('m_{DM} [GeV]')
            lExp.GetXaxis().SetTitle('Mediator mass [GeV]')
	    lExp.Draw("colz")
	    
    else:
	    lObs.Draw("colz")
	    lObs.GetYaxis().SetRangeUser(0,2300)
            lObs.GetXaxis().SetRangeUser(600,4000)
            lObs.GetYaxis().SetTitle('m_{DM} [GeV]')
            lObs.GetXaxis().SetTitle('Mediator mass [GeV]')

    lXObs.SetFillColor(ROOT.kOrange+5)
    lXObs.SetFillStyle(3001)
    lXExp.SetLineStyle(ROOT.kDashed)

    lXExp.Draw("l sames")
    lXObs.Draw("l sames")
    leg.Draw()
    leg11 = ROOT.TLatex(1500,2370,'CMS #bf{Preliminary}')
    leg1=ROOT.TLatex(3300,2370,'77.8 fb^{-1} (13 TeV)')
    leg1.SetTextFont(42)
    leg1.SetTextSize(0.045)
    leg2=ROOT.TLatex(16500,1600,'#scale[1]{CMS}')
#    leg2.SetTextFont(42)
    leg2.SetTextSize(0.045)
    leg11.Draw()
    leg1.Draw()
    leg2.Draw()

#    pad=ROOT.TPad('mypad','mypad',0.93,0.8,1.00,1)
#    pad.Draw()
    leg3=ROOT.TLatex(4900,1600,'#scale[1]{Coupling #font[11]{g}_{q}}')
#    leg3.SetFillColor(0)
    leg3.SetTextAngle(90)
    leg3.SetTextFont(42)
    leg4=ROOT.TLatex(1800,870,'#splitline{#scale[0.78]{Vector mediator}}{#scale[0.78]{& Dirac DM}}')
    leg4.SetTextFont(42)
    leg4.Draw()
    leg5=ROOT.TLatex(1800,383,'#splitline{#scale[0.78]{g_{DM} = 1.0}}{#scale[0.78]{g_{q} = 0.25}}')
    leg5.SetTextFont(42)
    leg5.Draw()
    leg6=ROOT.TLatex(1800,630,'#scale[0.78]{95% CL Limits}')

    leg6.SetTextFont(42)
    leg6.Draw()
    leg3.Draw('same')
    canv1.Update()
    ROOT.gPad.Modified()
    ROOT.gPad.RedrawAxis()
    
    fileend="_dijet_v" if iAxial else "_dijet_v"
    fileend=fileend+"_90" if i90CL else fileend
    fileend=fileend+"_Exp" if iExp else fileend
    canv1.SaveAs("gq_mdm_mmed"+fileend+".png")
    canv1.SaveAs("gq_mdm_mmed"+fileend+".pdf")
    lFile = ROOT.TFile("MMedMDM"+fileend+".root","RECREATE")
    lObs.SetName("obs")
    lObs.SetTitle("obs")
    lExp.SetName("exp")
    lExp.SetTitle("exp")
    lXObs.SetName("obs_025")
    lXObs.SetTitle("obs_025")
    lXExp.SetName("exp_025")
    lXExp.SetTitle("exp_025")
    lObs.Write()
    lExp.Write()
    lXObs.Write()
    lXExp.Write()
    end()
        
if __name__ == '__main__':
    options=parser()
    main(options.Axial,options.CL90,options.Exp,options.gb)
